#include "ASRuntimeBind_0Module.h"
#include "AngelscriptBinds.h"
#include "MeshDescriptionBase.h"
void FASRuntimeBind_0Module::Bind_MeshDescriptionBase()
{
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "ComputePolygonTriangulation", { ERASE_METHOD_PTR(UMeshDescriptionBase, ComputePolygonTriangulation, (FPolygonID), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "CreateEdge", { ERASE_METHOD_PTR(UMeshDescriptionBase, CreateEdge, (FVertexID,  FVertexID), ERASE_ARGUMENT_PACK( FEdgeID )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "CreateEdgeWithID", { ERASE_METHOD_PTR(UMeshDescriptionBase, CreateEdgeWithID, (FEdgeID,  FVertexID,  FVertexID), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "CreatePolygon", { ERASE_METHOD_PTR(UMeshDescriptionBase, CreatePolygon, (FPolygonGroupID,  TArray<FVertexInstanceID>&,  TArray<FEdgeID>&), ERASE_ARGUMENT_PACK( FPolygonID )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "CreatePolygonGroup", { ERASE_METHOD_PTR(UMeshDescriptionBase, CreatePolygonGroup, (), ERASE_ARGUMENT_PACK( FPolygonGroupID )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "CreatePolygonGroupWithID", { ERASE_METHOD_PTR(UMeshDescriptionBase, CreatePolygonGroupWithID, (FPolygonGroupID), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "CreatePolygonWithID", { ERASE_METHOD_PTR(UMeshDescriptionBase, CreatePolygonWithID, (FPolygonID,  FPolygonGroupID,  TArray<FVertexInstanceID>&,  TArray<FEdgeID>&), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "CreateTriangle", { ERASE_METHOD_PTR(UMeshDescriptionBase, CreateTriangle, (FPolygonGroupID,  const TArray<FVertexInstanceID>&,  TArray<FEdgeID>&), ERASE_ARGUMENT_PACK( FTriangleID )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "CreateTriangleWithID", { ERASE_METHOD_PTR(UMeshDescriptionBase, CreateTriangleWithID, (FTriangleID,  FPolygonGroupID,  const TArray<FVertexInstanceID>&,  TArray<FEdgeID>&), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "CreateVertex", { ERASE_METHOD_PTR(UMeshDescriptionBase, CreateVertex, (), ERASE_ARGUMENT_PACK( FVertexID )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "CreateVertexInstance", { ERASE_METHOD_PTR(UMeshDescriptionBase, CreateVertexInstance, (FVertexID), ERASE_ARGUMENT_PACK( FVertexInstanceID )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "CreateVertexInstanceWithID", { ERASE_METHOD_PTR(UMeshDescriptionBase, CreateVertexInstanceWithID, (FVertexInstanceID,  FVertexID), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "CreateVertexWithID", { ERASE_METHOD_PTR(UMeshDescriptionBase, CreateVertexWithID, (FVertexID), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "DeleteEdge", { ERASE_METHOD_PTR(UMeshDescriptionBase, DeleteEdge, (FEdgeID,  TArray<FVertexID>&), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "DeletePolygon", { ERASE_METHOD_PTR(UMeshDescriptionBase, DeletePolygon, (FPolygonID,  TArray<FEdgeID>&,  TArray<FVertexInstanceID>&,  TArray<FPolygonGroupID>&), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "DeletePolygonGroup", { ERASE_METHOD_PTR(UMeshDescriptionBase, DeletePolygonGroup, (FPolygonGroupID), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "DeleteTriangle", { ERASE_METHOD_PTR(UMeshDescriptionBase, DeleteTriangle, (FTriangleID,  TArray<FEdgeID>&,  TArray<FVertexInstanceID>&,  TArray<FPolygonGroupID>&), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "DeleteVertex", { ERASE_METHOD_PTR(UMeshDescriptionBase, DeleteVertex, (FVertexID), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "DeleteVertexInstance", { ERASE_METHOD_PTR(UMeshDescriptionBase, DeleteVertexInstance, (FVertexInstanceID,  TArray<FVertexID>&), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "Empty", { ERASE_METHOD_PTR(UMeshDescriptionBase, Empty, (), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetEdgeConnectedPolygons", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetEdgeConnectedPolygons, (FEdgeID,  TArray<FPolygonID>&) const, ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetEdgeConnectedTriangles", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetEdgeConnectedTriangles, (FEdgeID,  TArray<FTriangleID>&) const, ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetEdgeCount", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetEdgeCount, () const, ERASE_ARGUMENT_PACK(int32 )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetEdgeVertex", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetEdgeVertex, (FEdgeID,  int32) const, ERASE_ARGUMENT_PACK( FVertexID )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetEdgeVertices", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetEdgeVertices, (const FEdgeID,  TArray<FVertexID>&) const, ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetNumEdgeConnectedPolygons", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetNumEdgeConnectedPolygons, (FEdgeID) const, ERASE_ARGUMENT_PACK( int32 )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetNumEdgeConnectedTriangles", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetNumEdgeConnectedTriangles, (FEdgeID) const, ERASE_ARGUMENT_PACK( int32 )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetNumPolygonGroupPolygons", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetNumPolygonGroupPolygons, (FPolygonGroupID) const, ERASE_ARGUMENT_PACK( int32 )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetNumPolygonInternalEdges", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetNumPolygonInternalEdges, (FPolygonID) const, ERASE_ARGUMENT_PACK( int32 )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetNumPolygonTriangles", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetNumPolygonTriangles, (FPolygonID) const, ERASE_ARGUMENT_PACK( int32 )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetNumPolygonVertices", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetNumPolygonVertices, (FPolygonID) const, ERASE_ARGUMENT_PACK( int32 )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetNumVertexConnectedEdges", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetNumVertexConnectedEdges, (FVertexID) const, ERASE_ARGUMENT_PACK( int32 )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetNumVertexConnectedPolygons", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetNumVertexConnectedPolygons, (FVertexID) const, ERASE_ARGUMENT_PACK( int32 )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetNumVertexConnectedTriangles", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetNumVertexConnectedTriangles, (FVertexID) const, ERASE_ARGUMENT_PACK( int32 )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetNumVertexInstanceConnectedPolygons", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetNumVertexInstanceConnectedPolygons, (FVertexInstanceID) const, ERASE_ARGUMENT_PACK( int32 )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetNumVertexInstanceConnectedTriangles", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetNumVertexInstanceConnectedTriangles, (FVertexInstanceID) const, ERASE_ARGUMENT_PACK( int32 )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetNumVertexVertexInstances", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetNumVertexVertexInstances, (FVertexID) const, ERASE_ARGUMENT_PACK( int32 )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetPolygonAdjacentPolygons", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetPolygonAdjacentPolygons, (FPolygonID,  TArray<FPolygonID>&) const, ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetPolygonCount", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetPolygonCount, () const, ERASE_ARGUMENT_PACK(int32 )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetPolygonGroupCount", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetPolygonGroupCount, () const, ERASE_ARGUMENT_PACK(int32 )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetPolygonGroupPolygons", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetPolygonGroupPolygons, (FPolygonGroupID,  TArray<FPolygonID>&) const, ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetPolygonInternalEdges", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetPolygonInternalEdges, (FPolygonID,  TArray<FEdgeID>&) const, ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetPolygonPerimeterEdges", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetPolygonPerimeterEdges, (FPolygonID,  TArray<FEdgeID>&) const, ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetPolygonPolygonGroup", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetPolygonPolygonGroup, (FPolygonID) const, ERASE_ARGUMENT_PACK( FPolygonGroupID )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetPolygonTriangles", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetPolygonTriangles, (FPolygonID,  TArray<FTriangleID>&) const, ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetPolygonVertexInstances", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetPolygonVertexInstances, (FPolygonID,  TArray<FVertexInstanceID>&) const, ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetPolygonVertices", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetPolygonVertices, (FPolygonID,  TArray<FVertexID>&) const, ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetTriangleAdjacentTriangles", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetTriangleAdjacentTriangles, (FTriangleID,  TArray<FTriangleID>&) const, ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetTriangleCount", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetTriangleCount, () const, ERASE_ARGUMENT_PACK(int32 )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetTriangleEdges", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetTriangleEdges, (FTriangleID,  TArray<FEdgeID>&) const, ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetTrianglePolygon", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetTrianglePolygon, (FTriangleID) const, ERASE_ARGUMENT_PACK( FPolygonID )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetTrianglePolygonGroup", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetTrianglePolygonGroup, (FTriangleID) const, ERASE_ARGUMENT_PACK( FPolygonGroupID )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetTriangleVertexInstance", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetTriangleVertexInstance, (FTriangleID,  int32) const, ERASE_ARGUMENT_PACK( FVertexInstanceID )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetTriangleVertexInstances", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetTriangleVertexInstances, (FTriangleID,  TArray<FVertexInstanceID>&) const, ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetTriangleVertices", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetTriangleVertices, (FTriangleID,  TArray<FVertexID>&) const, ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetVertexAdjacentVertices", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetVertexAdjacentVertices, (FVertexID,  TArray<FVertexID>&) const, ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetVertexConnectedEdges", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetVertexConnectedEdges, (FVertexID,  TArray<FEdgeID>&) const, ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetVertexConnectedPolygons", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetVertexConnectedPolygons, (FVertexID,  TArray<FPolygonID>&) const, ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetVertexConnectedTriangles", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetVertexConnectedTriangles, (FVertexID,  TArray<FTriangleID>&) const, ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetVertexCount", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetVertexCount, () const, ERASE_ARGUMENT_PACK(int32 )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetVertexInstanceConnectedPolygons", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetVertexInstanceConnectedPolygons, (FVertexInstanceID,  TArray<FPolygonID>&) const, ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetVertexInstanceConnectedTriangles", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetVertexInstanceConnectedTriangles, (FVertexInstanceID,  TArray<FTriangleID>&) const, ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetVertexInstanceCount", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetVertexInstanceCount, () const, ERASE_ARGUMENT_PACK(int32 )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetVertexInstanceForPolygonVertex", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetVertexInstanceForPolygonVertex, (FPolygonID,  FVertexID) const, ERASE_ARGUMENT_PACK( FVertexInstanceID )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetVertexInstanceForTriangleVertex", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetVertexInstanceForTriangleVertex, (FTriangleID,  FVertexID) const, ERASE_ARGUMENT_PACK( FVertexInstanceID )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetVertexInstancePairEdge", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetVertexInstancePairEdge, (FVertexInstanceID,  FVertexInstanceID) const, ERASE_ARGUMENT_PACK( FEdgeID )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetVertexInstanceVertex", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetVertexInstanceVertex, (FVertexInstanceID) const, ERASE_ARGUMENT_PACK( FVertexID )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetVertexPairEdge", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetVertexPairEdge, (FVertexID,  FVertexID) const, ERASE_ARGUMENT_PACK( FEdgeID )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetVertexPosition", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetVertexPosition, (FVertexID) const, ERASE_ARGUMENT_PACK( FVector )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "GetVertexVertexInstances", { ERASE_METHOD_PTR(UMeshDescriptionBase, GetVertexVertexInstances, (FVertexID,  TArray<FVertexInstanceID>&) const, ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "IsEdgeInternal", { ERASE_METHOD_PTR(UMeshDescriptionBase, IsEdgeInternal, (FEdgeID) const, ERASE_ARGUMENT_PACK( bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "IsEdgeInternalToPolygon", { ERASE_METHOD_PTR(UMeshDescriptionBase, IsEdgeInternalToPolygon, (FEdgeID,  FPolygonID) const, ERASE_ARGUMENT_PACK( bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "IsEdgeValid", { ERASE_METHOD_PTR(UMeshDescriptionBase, IsEdgeValid, (FEdgeID) const, ERASE_ARGUMENT_PACK( bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "IsEmpty", { ERASE_METHOD_PTR(UMeshDescriptionBase, IsEmpty, () const, ERASE_ARGUMENT_PACK( bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "IsPolygonGroupValid", { ERASE_METHOD_PTR(UMeshDescriptionBase, IsPolygonGroupValid, (FPolygonGroupID) const, ERASE_ARGUMENT_PACK( bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "IsPolygonValid", { ERASE_METHOD_PTR(UMeshDescriptionBase, IsPolygonValid, (FPolygonID) const, ERASE_ARGUMENT_PACK( bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "IsTrianglePartOfNgon", { ERASE_METHOD_PTR(UMeshDescriptionBase, IsTrianglePartOfNgon, (FTriangleID) const, ERASE_ARGUMENT_PACK( bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "IsTriangleValid", { ERASE_METHOD_PTR(UMeshDescriptionBase, IsTriangleValid, (const FTriangleID) const, ERASE_ARGUMENT_PACK( bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "IsVertexInstanceValid", { ERASE_METHOD_PTR(UMeshDescriptionBase, IsVertexInstanceValid, (FVertexInstanceID) const, ERASE_ARGUMENT_PACK( bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "IsVertexOrphaned", { ERASE_METHOD_PTR(UMeshDescriptionBase, IsVertexOrphaned, (FVertexID) const, ERASE_ARGUMENT_PACK( bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "IsVertexValid", { ERASE_METHOD_PTR(UMeshDescriptionBase, IsVertexValid, (FVertexID) const, ERASE_ARGUMENT_PACK( bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "ReserveNewEdges", { ERASE_METHOD_PTR(UMeshDescriptionBase, ReserveNewEdges, (int32), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "ReserveNewPolygonGroups", { ERASE_METHOD_PTR(UMeshDescriptionBase, ReserveNewPolygonGroups, (int32), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "ReserveNewPolygons", { ERASE_METHOD_PTR(UMeshDescriptionBase, ReserveNewPolygons, (const int32), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "ReserveNewTriangles", { ERASE_METHOD_PTR(UMeshDescriptionBase, ReserveNewTriangles, (int32), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "ReserveNewVertexInstances", { ERASE_METHOD_PTR(UMeshDescriptionBase, ReserveNewVertexInstances, (int32), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "ReserveNewVertices", { ERASE_METHOD_PTR(UMeshDescriptionBase, ReserveNewVertices, (int32), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "ReversePolygonFacing", { ERASE_METHOD_PTR(UMeshDescriptionBase, ReversePolygonFacing, (FPolygonID), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "SetPolygonPolygonGroup", { ERASE_METHOD_PTR(UMeshDescriptionBase, SetPolygonPolygonGroup, (FPolygonID,  FPolygonGroupID), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "SetPolygonVertexInstances", { ERASE_METHOD_PTR(UMeshDescriptionBase, SetPolygonVertexInstances, (FPolygonID,  const TArray<FVertexInstanceID>&), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UMeshDescriptionBase::StaticClass(), "SetVertexPosition", { ERASE_METHOD_PTR(UMeshDescriptionBase, SetVertexPosition, (FVertexID,  const FVector&), ERASE_ARGUMENT_PACK( void )) } );
}
