#include "ASRuntimeBind_10Module.h"
#include "AngelscriptBinds.h"
#include "GeometryCollection/GeometryCollectionComponent.h"
#include "UObject/NoExportTypes.h"
#include "GeometryCollection/GeometryCollectionSimulationTypes.h"
#include "Field/FieldSystemObjects.h"
#include "GeometryCollection/GeometryCollectionDamagePropagationData.h"
#include "GeometryCollection/GeometryCollectionObject.h"
void FASRuntimeBind_10Module::Bind_GeometryCollectionComponent()
{
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "ApplyAngularVelocity", { ERASE_METHOD_PTR(UGeometryCollectionComponent, ApplyAngularVelocity, (int32,  const FVector&), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "ApplyAssetDefaults", { ERASE_METHOD_PTR(UGeometryCollectionComponent, ApplyAssetDefaults, (), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "ApplyBreakingAngularVelocity", { ERASE_METHOD_PTR(UGeometryCollectionComponent, ApplyBreakingAngularVelocity, (int32,  const FVector&), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "ApplyBreakingLinearVelocity", { ERASE_METHOD_PTR(UGeometryCollectionComponent, ApplyBreakingLinearVelocity, (int32,  const FVector&), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "ApplyExternalStrain", { ERASE_METHOD_PTR(UGeometryCollectionComponent, ApplyExternalStrain, (int32,  const FVector&,  float,  int32,  float,  float), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "ApplyInternalStrain", { ERASE_METHOD_PTR(UGeometryCollectionComponent, ApplyInternalStrain, (int32,  const FVector&,  float,  int32,  float,  float), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "ApplyKinematicField", { ERASE_METHOD_PTR(UGeometryCollectionComponent, ApplyKinematicField, ( float,  FVector), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "ApplyLinearVelocity", { ERASE_METHOD_PTR(UGeometryCollectionComponent, ApplyLinearVelocity, (int32,  const FVector&), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "ApplyPhysicsField", { ERASE_METHOD_PTR(UGeometryCollectionComponent, ApplyPhysicsField, ( bool,  EGeometryCollectionPhysicsTypeEnum,  UFieldSystemMetaData*,  UFieldNodeBase*), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "CrumbleActiveClusters", { ERASE_METHOD_PTR(UGeometryCollectionComponent, CrumbleActiveClusters, (), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "CrumbleCluster", { ERASE_METHOD_PTR(UGeometryCollectionComponent, CrumbleCluster, (int32), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "EnableRootProxyForCustomRenderer", { ERASE_METHOD_PTR(UGeometryCollectionComponent, EnableRootProxyForCustomRenderer, (bool), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "GetDamageThreshold", { ERASE_METHOD_PTR(UGeometryCollectionComponent, GetDamageThreshold, () const, ERASE_ARGUMENT_PACK(TArray<float> )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "GetDebugInfo", { ERASE_METHOD_PTR(UGeometryCollectionComponent, GetDebugInfo, (), ERASE_ARGUMENT_PACK( FString )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "GetInitialLevel", { ERASE_METHOD_PTR(UGeometryCollectionComponent, GetInitialLevel, (int32), ERASE_ARGUMENT_PACK( int32 )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "GetInitialLocalRestTransforms", { ERASE_METHOD_PTR(UGeometryCollectionComponent, GetInitialLocalRestTransforms, () const, ERASE_ARGUMENT_PACK( TArray<FTransform> )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "GetLocalBounds", { ERASE_METHOD_PTR(UGeometryCollectionComponent, GetLocalBounds, () const, ERASE_ARGUMENT_PACK(FBox )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "GetMassAndExtents", { ERASE_METHOD_PTR(UGeometryCollectionComponent, GetMassAndExtents, (int32,  float&,  FBox&), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "GetRootCurrentTransform", { ERASE_METHOD_PTR(UGeometryCollectionComponent, GetRootCurrentTransform, () const, ERASE_ARGUMENT_PACK( FTransform )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "GetRootIndex", { ERASE_METHOD_PTR(UGeometryCollectionComponent, GetRootIndex, () const, ERASE_ARGUMENT_PACK( int32 )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "GetRootInitialTransform", { ERASE_METHOD_PTR(UGeometryCollectionComponent, GetRootInitialTransform, () const, ERASE_ARGUMENT_PACK( FTransform )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "GetUseStaticMeshCollisionForTraces", { ERASE_METHOD_PTR(UGeometryCollectionComponent, GetUseStaticMeshCollisionForTraces, () const, ERASE_ARGUMENT_PACK( bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "IsRootBroken", { ERASE_METHOD_PTR(UGeometryCollectionComponent, IsRootBroken, () const, ERASE_ARGUMENT_PACK( bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "RemoveAllAnchors", { ERASE_METHOD_PTR(UGeometryCollectionComponent, RemoveAllAnchors, (), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "SetAbandonedParticleCollisionProfileName", { ERASE_METHOD_PTR(UGeometryCollectionComponent, SetAbandonedParticleCollisionProfileName, (FName), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "SetAnchoredByBox", { ERASE_METHOD_PTR(UGeometryCollectionComponent, SetAnchoredByBox, (FBox,  bool,  int32), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "SetAnchoredByIndex", { ERASE_METHOD_PTR(UGeometryCollectionComponent, SetAnchoredByIndex, (int32,  bool), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "SetAnchoredByTransformedBox", { ERASE_METHOD_PTR(UGeometryCollectionComponent, SetAnchoredByTransformedBox, (FBox,  FTransform,  bool,  int32), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "SetDamageModel", { ERASE_METHOD_PTR(UGeometryCollectionComponent, SetDamageModel, (EDamageModelTypeEnum), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "SetDamagePropagationData", { ERASE_METHOD_PTR(UGeometryCollectionComponent, SetDamagePropagationData, (const FGeometryCollectionDamagePropagationData&), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "SetDamageThreshold", { ERASE_METHOD_PTR(UGeometryCollectionComponent, SetDamageThreshold, (const TArray<float>&), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "SetDensityFromPhysicsMaterial", { ERASE_METHOD_PTR(UGeometryCollectionComponent, SetDensityFromPhysicsMaterial, (bool), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "SetEnableDamageFromCollision", { ERASE_METHOD_PTR(UGeometryCollectionComponent, SetEnableDamageFromCollision, (bool), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "SetGravityGroupIndex", { ERASE_METHOD_PTR(UGeometryCollectionComponent, SetGravityGroupIndex, (int32), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "SetLocalRestTransforms", { ERASE_METHOD_PTR(UGeometryCollectionComponent, SetLocalRestTransforms, (const TArray<FTransform>&,  bool), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "SetNotifyBreaks", { ERASE_METHOD_PTR(UGeometryCollectionComponent, SetNotifyBreaks, (bool), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "SetNotifyCrumblings", { ERASE_METHOD_PTR(UGeometryCollectionComponent, SetNotifyCrumblings, (bool,  bool), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "SetNotifyGlobalBreaks", { ERASE_METHOD_PTR(UGeometryCollectionComponent, SetNotifyGlobalBreaks, (bool), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "SetNotifyGlobalCollision", { ERASE_METHOD_PTR(UGeometryCollectionComponent, SetNotifyGlobalCollision, (bool), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "SetNotifyGlobalCrumblings", { ERASE_METHOD_PTR(UGeometryCollectionComponent, SetNotifyGlobalCrumblings, (bool,  bool), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "SetNotifyGlobalRemovals", { ERASE_METHOD_PTR(UGeometryCollectionComponent, SetNotifyGlobalRemovals, (bool), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "SetNotifyRemovals", { ERASE_METHOD_PTR(UGeometryCollectionComponent, SetNotifyRemovals, (bool), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "SetOneWayInteractionLevel", { ERASE_METHOD_PTR(UGeometryCollectionComponent, SetOneWayInteractionLevel, (int32), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "SetPerLevelCollisionProfileNames", { ERASE_METHOD_PTR(UGeometryCollectionComponent, SetPerLevelCollisionProfileNames, (const TArray<FName>&), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "SetPerParticleCollisionProfileName", { ERASE_METHOD_PTR(UGeometryCollectionComponent, SetPerParticleCollisionProfileName, (const TArray<int32>&,  FName), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "SetRestCollection", { ERASE_METHOD_PTR(UGeometryCollectionComponent, SetRestCollection, (const UGeometryCollection *,  bool), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "SetUseMaterialDamageModifiers", { ERASE_METHOD_PTR(UGeometryCollectionComponent, SetUseMaterialDamageModifiers, (bool), ERASE_ARGUMENT_PACK( void )) } );
			FAngelscriptBinds::AddFunctionEntry(UGeometryCollectionComponent::StaticClass(), "SetUseStaticMeshCollisionForTraces", { ERASE_METHOD_PTR(UGeometryCollectionComponent, SetUseStaticMeshCollisionForTraces, (bool), ERASE_ARGUMENT_PACK( void )) } );
}
