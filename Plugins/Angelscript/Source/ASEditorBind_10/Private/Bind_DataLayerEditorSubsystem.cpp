#include "ASEditorBind_10Module.h"
#include "AngelscriptBinds.h"
#include "DataLayer/DataLayerEditorSubsystem.h"
void FASEditorBind_10Module::Bind_DataLayerEditorSubsystem()
{
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "AddActorsToDataLayer", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, AddActorsToDataLayer, (const TArray<AActor*>&,  UDataLayerInstance*), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "AddActorsToDataLayers", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, AddActorsToDataLayers, (const TArray<AActor*>&,  const TArray<UDataLayerInstance*>&), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "AddActorToDataLayer", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, AddActorToDataLayer, (AActor*,  UDataLayerInstance*), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "AddActorToDataLayers", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, AddActorToDataLayers, (AActor*,  const TArray<UDataLayerInstance*>&), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "AddSelectedActorsToDataLayer", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, AddSelectedActorsToDataLayer, (UDataLayerInstance*), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "AddSelectedActorsToDataLayers", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, AddSelectedActorsToDataLayers, (const TArray<UDataLayerInstance*>&), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "AddToActorEditorContext", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, AddToActorEditorContext, (UDataLayerInstance*), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "AppendActorsFromDataLayer", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, AppendActorsFromDataLayer, (UDataLayerInstance*,  TArray<AActor*>&) const, ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "AppendActorsFromDataLayers", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, AppendActorsFromDataLayers, (const TArray<UDataLayerInstance*>&,  TArray<AActor*>&) const, ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "CreateDataLayer", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, CreateDataLayer, (UDataLayerInstance*), ERASE_ARGUMENT_PACK(UDataLayerInstance* )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "CreateDataLayerInstance", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, CreateDataLayerInstance, (const FDataLayerCreationParameters&), ERASE_ARGUMENT_PACK(UDataLayerInstance* )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "DeleteDataLayer", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, DeleteDataLayer, (UDataLayerInstance*), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "DeleteDataLayers", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, DeleteDataLayers, (const TArray<UDataLayerInstance*>&), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "GetActorEditorContextCurrentExternalDataLayer", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, GetActorEditorContextCurrentExternalDataLayer, () const, ERASE_ARGUMENT_PACK(const UExternalDataLayerAsset* )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "GetActorsFromDataLayer", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, GetActorsFromDataLayer, (UDataLayerInstance*) const, ERASE_ARGUMENT_PACK(TArray<AActor*> )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "GetActorsFromDataLayers", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, GetActorsFromDataLayers, (const TArray<UDataLayerInstance*>&) const, ERASE_ARGUMENT_PACK(TArray<AActor*> )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "GetAllDataLayers", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, GetAllDataLayers, (), ERASE_ARGUMENT_PACK(TArray<UDataLayerInstance*> )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "GetDataLayer", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, GetDataLayer, (const FActorDataLayer&) const, ERASE_ARGUMENT_PACK(UDataLayerInstance* )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "GetDataLayerFromLabel", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, GetDataLayerFromLabel, (const FName&) const, ERASE_ARGUMENT_PACK(UDataLayerInstance* )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "GetDataLayerInstance", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, GetDataLayerInstance, (const UDataLayerAsset*) const, ERASE_ARGUMENT_PACK(UDataLayerInstance* )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "GetDataLayerInstances", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, GetDataLayerInstances, (const TArray<UDataLayerAsset*>) const, ERASE_ARGUMENT_PACK(TArray<UDataLayerInstance*> )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "IsActorValidForDataLayer", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, IsActorValidForDataLayer, (AActor*), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "IsActorValidForDataLayerInstances", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, IsActorValidForDataLayerInstances, (AActor*,  const TArray<UDataLayerInstance*>&), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "MakeAllDataLayersVisible", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, MakeAllDataLayersVisible, (), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "RemoveActorFromAllDataLayers", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, RemoveActorFromAllDataLayers, (AActor*), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "RemoveActorFromDataLayer", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, RemoveActorFromDataLayer, (AActor*,  UDataLayerInstance*), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "RemoveActorFromDataLayers", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, RemoveActorFromDataLayers, (AActor*,  const TArray<UDataLayerInstance*>&), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "RemoveActorsFromAllDataLayers", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, RemoveActorsFromAllDataLayers, (const TArray<AActor*>&), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "RemoveActorsFromDataLayer", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, RemoveActorsFromDataLayer, (const TArray<AActor*>&,  UDataLayerInstance*), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "RemoveActorsFromDataLayers", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, RemoveActorsFromDataLayers, (const TArray<AActor*>&,  const TArray<UDataLayerInstance*>&), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "RemoveFromActorEditorContext", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, RemoveFromActorEditorContext, (UDataLayerInstance*), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "RemoveSelectedActorsFromDataLayer", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, RemoveSelectedActorsFromDataLayer, (UDataLayerInstance*), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "RemoveSelectedActorsFromDataLayers", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, RemoveSelectedActorsFromDataLayers, (const TArray<UDataLayerInstance*>&), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "RenameDataLayer", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, RenameDataLayer, (UDataLayerInstance*,  const FName&), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "SelectActorsInDataLayer", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, SelectActorsInDataLayer, (UDataLayerInstance*,  const bool,  const bool,  const bool), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "SelectActorsInDataLayers", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, SelectActorsInDataLayers, (const TArray<UDataLayerInstance*>&,  const bool,  const bool,  const bool), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "SetActorEditorContextCurrentExternalDataLayer", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, SetActorEditorContextCurrentExternalDataLayer, (const UExternalDataLayerAsset*), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "SetDataLayerIsLoadedInEditor", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, SetDataLayerIsLoadedInEditor, (UDataLayerInstance*,  const bool,  const bool), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "SetDataLayersIsLoadedInEditor", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, SetDataLayersIsLoadedInEditor, (const TArray<UDataLayerInstance*>&,  const bool,  const bool), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "SetDataLayersVisibility", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, SetDataLayersVisibility, (const TArray<UDataLayerInstance*>&,  const bool), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "SetDataLayerVisibility", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, SetDataLayerVisibility, (UDataLayerInstance*,  const bool), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "SetParentDataLayer", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, SetParentDataLayer, (UDataLayerInstance*,  UDataLayerInstance*), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "ToggleDataLayerIsLoadedInEditor", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, ToggleDataLayerIsLoadedInEditor, (UDataLayerInstance*,  const bool), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "ToggleDataLayersIsLoadedInEditor", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, ToggleDataLayersIsLoadedInEditor, (const TArray<UDataLayerInstance*>&,  const bool), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "ToggleDataLayersVisibility", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, ToggleDataLayersVisibility, (const TArray<UDataLayerInstance*>&), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "ToggleDataLayerVisibility", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, ToggleDataLayerVisibility, (UDataLayerInstance*), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "UpdateActorVisibility", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, UpdateActorVisibility, (AActor*,  bool&,  bool&,  const bool,  const bool), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UDataLayerEditorSubsystem::StaticClass(), "UpdateAllActorsVisibility", { ERASE_METHOD_PTR(UDataLayerEditorSubsystem, UpdateAllActorsVisibility, (const bool,  const bool), ERASE_ARGUMENT_PACK(bool )) } );
}
