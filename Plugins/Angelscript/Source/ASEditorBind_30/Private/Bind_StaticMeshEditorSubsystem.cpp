#include "ASEditorBind_30Module.h"
#include "AngelscriptBinds.h"
#include "StaticMeshEditorSubsystem.h"
void FASEditorBind_30Module::Bind_StaticMeshEditorSubsystem()
{
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "AddSimpleCollisions", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, AddSimpleCollisions, (UStaticMesh*,  const EScriptCollisionShapeType), ERASE_ARGUMENT_PACK(int32 )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "AddSimpleCollisionsWithNotification", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, AddSimpleCollisionsWithNotification, (UStaticMesh*,  const EScriptCollisionShapeType,  bool), ERASE_ARGUMENT_PACK(int32 )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "AddUVChannel", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, AddUVChannel, (UStaticMesh*,  int32), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "BulkSetConvexDecompositionCollisions", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, BulkSetConvexDecompositionCollisions, (const TArray<UStaticMesh*>&,  int32,  int32,  int32), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "BulkSetConvexDecompositionCollisionsWithNotification", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, BulkSetConvexDecompositionCollisionsWithNotification, (const TArray<UStaticMesh*>&,  int32,  int32,  int32,  bool), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "CreateProxyMeshActor", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, CreateProxyMeshActor, (const TArray<class AStaticMeshActor*>&,  const FCreateProxyMeshActorOptions&,  class AStaticMeshActor*&), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "EnableSectionCastShadow", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, EnableSectionCastShadow, (UStaticMesh*,  bool,  int32,  int32), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "EnableSectionCollision", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, EnableSectionCollision, (UStaticMesh*,  bool,  int32,  int32), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "GenerateBoxUVChannel", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, GenerateBoxUVChannel, (UStaticMesh*,  int32,  int32,  const FVector&,  const FRotator&,  const FVector&), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "GenerateCylindricalUVChannel", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, GenerateCylindricalUVChannel, (UStaticMesh*,  int32,  int32,  const FVector&,  const FRotator&,  const FVector2D&), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "GeneratePlanarUVChannel", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, GeneratePlanarUVChannel, (UStaticMesh*,  int32,  int32,  const FVector&,  const FRotator&,  const FVector2D&), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "GetCollisionComplexity", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, GetCollisionComplexity, (UStaticMesh*), ERASE_ARGUMENT_PACK(TEnumAsByte<ECollisionTraceFlag> )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "GetConvexCollisionCount", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, GetConvexCollisionCount, (UStaticMesh*), ERASE_ARGUMENT_PACK(int32 )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "GetLodBuildSettings", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, GetLodBuildSettings, (const UStaticMesh*,  const int32,  FMeshBuildSettings&), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "GetLodCount", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, GetLodCount, (UStaticMesh*), ERASE_ARGUMENT_PACK(int32 )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "GetLODGroup", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, GetLODGroup, (UStaticMesh*), ERASE_ARGUMENT_PACK(FName )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "GetLODMaterialSlot", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, GetLODMaterialSlot, (UStaticMesh*,  int32,  int32), ERASE_ARGUMENT_PACK(int32 )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "GetLodReductionSettings", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, GetLodReductionSettings, (const UStaticMesh*,  const int32,  FMeshReductionSettings&), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "GetLodScreenSizes", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, GetLodScreenSizes, (UStaticMesh*), ERASE_ARGUMENT_PACK(TArray<float> )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "GetNaniteSettings", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, GetNaniteSettings, (UStaticMesh*), ERASE_ARGUMENT_PACK(FMeshNaniteSettings )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "GetNumberMaterials", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, GetNumberMaterials, (UStaticMesh*), ERASE_ARGUMENT_PACK(int32 )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "GetNumberVerts", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, GetNumberVerts, (UStaticMesh*,  int32), ERASE_ARGUMENT_PACK(int32 )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "GetNumUVChannels", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, GetNumUVChannels, (UStaticMesh*,  int32), ERASE_ARGUMENT_PACK(int32 )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "GetSimpleCollisionCount", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, GetSimpleCollisionCount, (UStaticMesh*), ERASE_ARGUMENT_PACK(int32 )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "HasInstanceVertexColors", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, HasInstanceVertexColors, (UStaticMeshComponent*), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "HasVertexColors", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, HasVertexColors, (UStaticMesh*), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "ImportLOD", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, ImportLOD, (UStaticMesh*,  const int32,  const FString&), ERASE_ARGUMENT_PACK(int32 )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "InsertUVChannel", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, InsertUVChannel, (UStaticMesh*,  int32,  int32), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "IsSectionCollisionEnabled", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, IsSectionCollisionEnabled, (UStaticMesh*,  int32,  int32), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "JoinStaticMeshActors", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, JoinStaticMeshActors, (const TArray<class AStaticMeshActor*>&,  const FJoinStaticMeshActorsOptions&), ERASE_ARGUMENT_PACK(class AActor* )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "MergeStaticMeshActors", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, MergeStaticMeshActors, (const TArray<class AStaticMeshActor*>&,  const FMergeStaticMeshActorsOptions&,  class AStaticMeshActor*&), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "ReimportAllCustomLODs", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, ReimportAllCustomLODs, (UStaticMesh*), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "RemoveCollisions", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, RemoveCollisions, (UStaticMesh*), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "RemoveCollisionsWithNotification", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, RemoveCollisionsWithNotification, (UStaticMesh*,  bool), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "RemoveLods", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, RemoveLods, (UStaticMesh*), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "RemoveUVChannel", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, RemoveUVChannel, (UStaticMesh*,  int32,  int32), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "ReplaceMeshComponentsMaterials", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, ReplaceMeshComponentsMaterials, (const TArray<class UMeshComponent*>&,  class UMaterialInterface*,  class UMaterialInterface*), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "ReplaceMeshComponentsMaterialsOnActors", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, ReplaceMeshComponentsMaterialsOnActors, (const TArray<class AActor*>&,  class UMaterialInterface*,  class UMaterialInterface*), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "ReplaceMeshComponentsMeshes", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, ReplaceMeshComponentsMeshes, (const TArray<class UStaticMeshComponent*>&,  class UStaticMesh*,  class UStaticMesh*), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "ReplaceMeshComponentsMeshesOnActors", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, ReplaceMeshComponentsMeshesOnActors, (const TArray<class AActor*>&,  class UStaticMesh*,  class UStaticMesh*), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "SetAllowCPUAccess", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, SetAllowCPUAccess, (UStaticMesh*,  bool), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "SetConvexDecompositionCollisions", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, SetConvexDecompositionCollisions, (UStaticMesh*,  int32,  int32,  int32), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "SetConvexDecompositionCollisionsWithNotification", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, SetConvexDecompositionCollisionsWithNotification, (UStaticMesh*,  int32,  int32,  int32,  bool), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "SetGenerateLightmapUVs", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, SetGenerateLightmapUVs, (UStaticMesh*,  bool), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "SetLodBuildSettings", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, SetLodBuildSettings, (UStaticMesh*,  const int32,  const FMeshBuildSettings&), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "SetLodFromStaticMesh", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, SetLodFromStaticMesh, (UStaticMesh*,  int32,  UStaticMesh*,  int32,  bool), ERASE_ARGUMENT_PACK(int32 )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "SetLODGroup", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, SetLODGroup, (UStaticMesh*,  FName,  bool), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "SetLODMaterialSlot", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, SetLODMaterialSlot, (UStaticMesh*,  int32,  int32,  int32), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "SetLodReductionSettings", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, SetLodReductionSettings, (UStaticMesh*,  const int32,  const FMeshReductionSettings&), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "SetLods", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, SetLods, (UStaticMesh*,  const FStaticMeshReductionOptions&), ERASE_ARGUMENT_PACK(int32 )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "SetLodScreenSizes", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, SetLodScreenSizes, (UStaticMesh*,  const TArray<float>&), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "SetLodsWithNotification", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, SetLodsWithNotification, (UStaticMesh*,  const FStaticMeshReductionOptions&,  bool), ERASE_ARGUMENT_PACK(int32 )) } );
			FAngelscriptBinds::AddFunctionEntry(UStaticMeshEditorSubsystem::StaticClass(), "SetNaniteSettings", { ERASE_METHOD_PTR(UStaticMeshEditorSubsystem, SetNaniteSettings, (UStaticMesh*,  FMeshNaniteSettings,  bool), ERASE_ARGUMENT_PACK(void )) } );
}
