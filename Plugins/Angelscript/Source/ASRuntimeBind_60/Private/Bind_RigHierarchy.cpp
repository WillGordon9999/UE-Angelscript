#include "ASRuntimeBind_60Module.h"
#include "AngelscriptBinds.h"
#include "Rigs/RigHierarchy.h"
void FASRuntimeBind_60Module::Bind_RigHierarchy()
{
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "Contains_ForBlueprint", { ERASE_METHOD_PTR(URigHierarchy, Contains_ForBlueprint, (FRigElementKey) const, ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "CopyHierarchy", { ERASE_METHOD_PTR(URigHierarchy, CopyHierarchy, (URigHierarchy*), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "CopyPose", { ERASE_METHOD_PTR(URigHierarchy, CopyPose, (URigHierarchy*,  bool,  bool,  bool,  bool), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetAllKeys_ForBlueprint", { ERASE_METHOD_PTR(URigHierarchy, GetAllKeys_ForBlueprint, (bool) const, ERASE_ARGUMENT_PACK(TArray<FRigElementKey> )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetBoneKeys", { ERASE_METHOD_PTR(URigHierarchy, GetBoneKeys, (bool) const, ERASE_ARGUMENT_PACK(TArray<FRigElementKey> )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetBoolArrayMetadata", { ERASE_METHOD_PTR(URigHierarchy, GetBoolArrayMetadata, (FRigElementKey,  FName) const, ERASE_ARGUMENT_PACK(TArray<bool> )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetBoolMetadata", { ERASE_METHOD_PTR(URigHierarchy, GetBoolMetadata, (FRigElementKey,  FName,  bool) const, ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetChildren", { ERASE_METHOD_PTR(URigHierarchy, GetChildren, (FRigElementKey,  bool) const, ERASE_ARGUMENT_PACK(TArray<FRigElementKey> )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetConnectorKeys", { ERASE_METHOD_PTR(URigHierarchy, GetConnectorKeys, (bool) const, ERASE_ARGUMENT_PACK(TArray<FRigElementKey> )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetConnectorStates", { ERASE_METHOD_PTR(URigHierarchy, GetConnectorStates, () const, ERASE_ARGUMENT_PACK(TArray<FRigConnectorState> )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetControlKeys", { ERASE_METHOD_PTR(URigHierarchy, GetControlKeys, (bool) const, ERASE_ARGUMENT_PACK(TArray<FRigElementKey> )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetController", { ERASE_METHOD_PTR(URigHierarchy, GetController, (bool), ERASE_ARGUMENT_PACK(URigHierarchyController* )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetControlPreferredEulerAngles", { ERASE_METHOD_PTR(URigHierarchy, GetControlPreferredEulerAngles, (FRigElementKey,  EEulerRotationOrder,  bool) const, ERASE_ARGUMENT_PACK(FVector )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetControlPreferredEulerAnglesByIndex", { ERASE_METHOD_PTR(URigHierarchy, GetControlPreferredEulerAnglesByIndex, (int32,  EEulerRotationOrder,  bool) const, ERASE_ARGUMENT_PACK(FVector )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetControlPreferredEulerRotationOrder", { ERASE_METHOD_PTR(URigHierarchy, GetControlPreferredEulerRotationOrder, (FRigElementKey,  bool) const, ERASE_ARGUMENT_PACK(EEulerRotationOrder )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetControlPreferredEulerRotationOrderByIndex", { ERASE_METHOD_PTR(URigHierarchy, GetControlPreferredEulerRotationOrderByIndex, (int32,  bool) const, ERASE_ARGUMENT_PACK(EEulerRotationOrder )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetControlPreferredRotator", { ERASE_METHOD_PTR(URigHierarchy, GetControlPreferredRotator, (FRigElementKey,  bool) const, ERASE_ARGUMENT_PACK(FRotator )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetControlPreferredRotatorByIndex", { ERASE_METHOD_PTR(URigHierarchy, GetControlPreferredRotatorByIndex, (int32,  bool) const, ERASE_ARGUMENT_PACK(FRotator )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetControlValue", { ERASE_METHOD_PTR(URigHierarchy, GetControlValue, (FRigElementKey,  ERigControlValueType) const, ERASE_ARGUMENT_PACK(FRigControlValue )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetControlValueByIndex", { ERASE_METHOD_PTR(URigHierarchy, GetControlValueByIndex, (int32,  ERigControlValueType) const, ERASE_ARGUMENT_PACK(FRigControlValue )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetCurveKeys", { ERASE_METHOD_PTR(URigHierarchy, GetCurveKeys, () const, ERASE_ARGUMENT_PACK(TArray<FRigElementKey> )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetCurveValue", { ERASE_METHOD_PTR(URigHierarchy, GetCurveValue, (FRigElementKey) const, ERASE_ARGUMENT_PACK(float )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetCurveValueByIndex", { ERASE_METHOD_PTR(URigHierarchy, GetCurveValueByIndex, (int32) const, ERASE_ARGUMENT_PACK(float )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetDefaultParent", { ERASE_METHOD_PTR(URigHierarchy, GetDefaultParent, (FRigElementKey) const, ERASE_ARGUMENT_PACK(FRigElementKey )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetFirstParent", { ERASE_METHOD_PTR(URigHierarchy, GetFirstParent, (FRigElementKey) const, ERASE_ARGUMENT_PACK(FRigElementKey )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetFloatArrayMetadata", { ERASE_METHOD_PTR(URigHierarchy, GetFloatArrayMetadata, (FRigElementKey,  FName) const, ERASE_ARGUMENT_PACK(TArray<float> )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetFloatMetadata", { ERASE_METHOD_PTR(URigHierarchy, GetFloatMetadata, (FRigElementKey,  FName,  float) const, ERASE_ARGUMENT_PACK(float )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetGlobalControlOffsetTransform", { ERASE_METHOD_PTR(URigHierarchy, GetGlobalControlOffsetTransform, (FRigElementKey,  bool) const, ERASE_ARGUMENT_PACK(FTransform )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetGlobalControlOffsetTransformByIndex", { ERASE_METHOD_PTR(URigHierarchy, GetGlobalControlOffsetTransformByIndex, (int32,  bool) const, ERASE_ARGUMENT_PACK(FTransform )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetGlobalControlShapeTransform", { ERASE_METHOD_PTR(URigHierarchy, GetGlobalControlShapeTransform, (FRigElementKey,  bool) const, ERASE_ARGUMENT_PACK(FTransform )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetGlobalControlShapeTransformByIndex", { ERASE_METHOD_PTR(URigHierarchy, GetGlobalControlShapeTransformByIndex, (int32,  bool) const, ERASE_ARGUMENT_PACK(FTransform )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetGlobalTransform", { ERASE_METHOD_PTR(URigHierarchy, GetGlobalTransform, (FRigElementKey,  bool) const, ERASE_ARGUMENT_PACK(FTransform )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetGlobalTransformByIndex", { ERASE_METHOD_PTR(URigHierarchy, GetGlobalTransformByIndex, (int32,  bool) const, ERASE_ARGUMENT_PACK(FTransform )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetIndex_ForBlueprint", { ERASE_METHOD_PTR(URigHierarchy, GetIndex_ForBlueprint, (FRigElementKey) const, ERASE_ARGUMENT_PACK(int32 )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetInt32ArrayMetadata", { ERASE_METHOD_PTR(URigHierarchy, GetInt32ArrayMetadata, (FRigElementKey,  FName) const, ERASE_ARGUMENT_PACK(TArray<int32> )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetInt32Metadata", { ERASE_METHOD_PTR(URigHierarchy, GetInt32Metadata, (FRigElementKey,  FName,  int32) const, ERASE_ARGUMENT_PACK(int32 )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetKey", { ERASE_METHOD_PTR(URigHierarchy, GetKey, (int32) const, ERASE_ARGUMENT_PACK(FRigElementKey )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetKeys", { ERASE_METHOD_PTR(URigHierarchy, GetKeys, (const TArray<int32>) const, ERASE_ARGUMENT_PACK(TArray<FRigElementKey> )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetLinearColorArrayMetadata", { ERASE_METHOD_PTR(URigHierarchy, GetLinearColorArrayMetadata, (FRigElementKey,  FName) const, ERASE_ARGUMENT_PACK(TArray<FLinearColor> )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetLinearColorMetadata", { ERASE_METHOD_PTR(URigHierarchy, GetLinearColorMetadata, (FRigElementKey,  FName,  FLinearColor) const, ERASE_ARGUMENT_PACK(FLinearColor )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetLocalControlShapeTransform", { ERASE_METHOD_PTR(URigHierarchy, GetLocalControlShapeTransform, (FRigElementKey,  bool) const, ERASE_ARGUMENT_PACK(FTransform )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetLocalControlShapeTransformByIndex", { ERASE_METHOD_PTR(URigHierarchy, GetLocalControlShapeTransformByIndex, (int32,  bool) const, ERASE_ARGUMENT_PACK(FTransform )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetLocalIndex_ForBlueprint", { ERASE_METHOD_PTR(URigHierarchy, GetLocalIndex_ForBlueprint, (FRigElementKey) const, ERASE_ARGUMENT_PACK(int32 )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetLocalTransform", { ERASE_METHOD_PTR(URigHierarchy, GetLocalTransform, (FRigElementKey,  bool) const, ERASE_ARGUMENT_PACK(FTransform )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetLocalTransformByIndex", { ERASE_METHOD_PTR(URigHierarchy, GetLocalTransformByIndex, (int32,  bool) const, ERASE_ARGUMENT_PACK(FTransform )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetMetadataNames", { ERASE_METHOD_PTR(URigHierarchy, GetMetadataNames, (FRigElementKey) const, ERASE_ARGUMENT_PACK(TArray<FName> )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetMetadataType", { ERASE_METHOD_PTR(URigHierarchy, GetMetadataType, (FRigElementKey,  FName) const, ERASE_ARGUMENT_PACK(ERigMetadataType )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetModulePath", { ERASE_METHOD_PTR(URigHierarchy, GetModulePath, (FRigElementKey) const, ERASE_ARGUMENT_PACK(FString )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetModulePathFName", { ERASE_METHOD_PTR(URigHierarchy, GetModulePathFName, (FRigElementKey) const, ERASE_ARGUMENT_PACK(FName )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetNameArrayMetadata", { ERASE_METHOD_PTR(URigHierarchy, GetNameArrayMetadata, (FRigElementKey,  FName) const, ERASE_ARGUMENT_PACK(TArray<FName> )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetNameMetadata", { ERASE_METHOD_PTR(URigHierarchy, GetNameMetadata, (FRigElementKey,  FName,  FName) const, ERASE_ARGUMENT_PACK(FName )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetNameSpace", { ERASE_METHOD_PTR(URigHierarchy, GetNameSpace, (FRigElementKey) const, ERASE_ARGUMENT_PACK(FString )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetNameSpaceFName", { ERASE_METHOD_PTR(URigHierarchy, GetNameSpaceFName, (FRigElementKey) const, ERASE_ARGUMENT_PACK(FName )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetNullKeys", { ERASE_METHOD_PTR(URigHierarchy, GetNullKeys, (bool) const, ERASE_ARGUMENT_PACK(TArray<FRigElementKey> )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetNumberOfParents", { ERASE_METHOD_PTR(URigHierarchy, GetNumberOfParents, (FRigElementKey) const, ERASE_ARGUMENT_PACK(int32 )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetParents", { ERASE_METHOD_PTR(URigHierarchy, GetParents, (FRigElementKey,  bool) const, ERASE_ARGUMENT_PACK(TArray<FRigElementKey> )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetParentTransform", { ERASE_METHOD_PTR(URigHierarchy, GetParentTransform, (FRigElementKey,  bool) const, ERASE_ARGUMENT_PACK(FTransform )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetParentTransformByIndex", { ERASE_METHOD_PTR(URigHierarchy, GetParentTransformByIndex, (int32,  bool) const, ERASE_ARGUMENT_PACK(FTransform )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetParentWeight", { ERASE_METHOD_PTR(URigHierarchy, GetParentWeight, (FRigElementKey,  FRigElementKey,  bool) const, ERASE_ARGUMENT_PACK(FRigElementWeight )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetParentWeightArray", { ERASE_METHOD_PTR(URigHierarchy, GetParentWeightArray, (FRigElementKey,  bool) const, ERASE_ARGUMENT_PACK(TArray<FRigElementWeight> )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetPose", { ERASE_METHOD_PTR(URigHierarchy, GetPose, (
		bool, 
		bool) const, ERASE_ARGUMENT_PACK(FRigPose )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetPreviousName", { ERASE_METHOD_PTR(URigHierarchy, GetPreviousName, (const FRigElementKey&) const, ERASE_ARGUMENT_PACK(FName )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetPreviousParent", { ERASE_METHOD_PTR(URigHierarchy, GetPreviousParent, (const FRigElementKey&) const, ERASE_ARGUMENT_PACK(FRigElementKey )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetQuatArrayMetadata", { ERASE_METHOD_PTR(URigHierarchy, GetQuatArrayMetadata, (FRigElementKey,  FName) const, ERASE_ARGUMENT_PACK(TArray<FQuat> )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetQuatMetadata", { ERASE_METHOD_PTR(URigHierarchy, GetQuatMetadata, (FRigElementKey,  FName,  FQuat) const, ERASE_ARGUMENT_PACK(FQuat )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetReferenceKeys", { ERASE_METHOD_PTR(URigHierarchy, GetReferenceKeys, (bool) const, ERASE_ARGUMENT_PACK(TArray<FRigElementKey> )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetRigElementKeyArrayMetadata", { ERASE_METHOD_PTR(URigHierarchy, GetRigElementKeyArrayMetadata, (FRigElementKey,  FName) const, ERASE_ARGUMENT_PACK(TArray<FRigElementKey> )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetRigElementKeyMetadata", { ERASE_METHOD_PTR(URigHierarchy, GetRigElementKeyMetadata, (FRigElementKey,  FName,  FRigElementKey) const, ERASE_ARGUMENT_PACK(FRigElementKey )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetRigidBodyKeys", { ERASE_METHOD_PTR(URigHierarchy, GetRigidBodyKeys, (bool) const, ERASE_ARGUMENT_PACK(TArray<FRigElementKey> )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetRootElementKeys", { ERASE_METHOD_PTR(URigHierarchy, GetRootElementKeys, () const, ERASE_ARGUMENT_PACK(TArray<FRigElementKey> )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetRotatorArrayMetadata", { ERASE_METHOD_PTR(URigHierarchy, GetRotatorArrayMetadata, (FRigElementKey,  FName) const, ERASE_ARGUMENT_PACK(TArray<FRotator> )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetRotatorMetadata", { ERASE_METHOD_PTR(URigHierarchy, GetRotatorMetadata, (FRigElementKey,  FName,  FRotator) const, ERASE_ARGUMENT_PACK(FRotator )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetRuleManager", { ERASE_METHOD_PTR(URigHierarchy, GetRuleManager, (bool), ERASE_ARGUMENT_PACK(UModularRigRuleManager* )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetSelectedKeys", { ERASE_METHOD_PTR(URigHierarchy, GetSelectedKeys, (ERigElementType) const, ERASE_ARGUMENT_PACK(TArray<FRigElementKey> )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetSocketKeys", { ERASE_METHOD_PTR(URigHierarchy, GetSocketKeys, (bool) const, ERASE_ARGUMENT_PACK(TArray<FRigElementKey> )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetSocketStates", { ERASE_METHOD_PTR(URigHierarchy, GetSocketStates, () const, ERASE_ARGUMENT_PACK(TArray<FRigSocketState> )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetTags", { ERASE_METHOD_PTR(URigHierarchy, GetTags, (FRigElementKey) const, ERASE_ARGUMENT_PACK(TArray<FName> )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetTransformArrayMetadata", { ERASE_METHOD_PTR(URigHierarchy, GetTransformArrayMetadata, (FRigElementKey,  FName) const, ERASE_ARGUMENT_PACK(TArray<FTransform> )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetTransformMetadata", { ERASE_METHOD_PTR(URigHierarchy, GetTransformMetadata, (FRigElementKey,  FName,  FTransform) const, ERASE_ARGUMENT_PACK(FTransform )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetVectorArrayMetadata", { ERASE_METHOD_PTR(URigHierarchy, GetVectorArrayMetadata, (FRigElementKey,  FName) const, ERASE_ARGUMENT_PACK(TArray<FVector> )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "GetVectorMetadata", { ERASE_METHOD_PTR(URigHierarchy, GetVectorMetadata, (FRigElementKey,  FName,  FVector) const, ERASE_ARGUMENT_PACK(FVector )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "HasTag", { ERASE_METHOD_PTR(URigHierarchy, HasTag, (FRigElementKey,  FName) const, ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "IsControllerAvailable", { ERASE_METHOD_PTR(URigHierarchy, IsControllerAvailable, () const, ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "IsCurveValueSet", { ERASE_METHOD_PTR(URigHierarchy, IsCurveValueSet, (FRigElementKey) const, ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "IsCurveValueSetByIndex", { ERASE_METHOD_PTR(URigHierarchy, IsCurveValueSetByIndex, (int32) const, ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "IsParentedTo", { ERASE_METHOD_PTR(URigHierarchy, IsParentedTo, (FRigElementKey,  FRigElementKey) const, ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "IsProcedural", { ERASE_METHOD_PTR(URigHierarchy, IsProcedural, (const FRigElementKey&) const, ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "IsSelected", { ERASE_METHOD_PTR(URigHierarchy, IsSelected, (FRigElementKey) const, ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "IsSelectedByIndex", { ERASE_METHOD_PTR(URigHierarchy, IsSelectedByIndex, (int32) const, ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "IsValidIndex", { ERASE_METHOD_PTR(URigHierarchy, IsValidIndex, (int32) const, ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "Num", { ERASE_METHOD_PTR(URigHierarchy, Num, () const, ERASE_ARGUMENT_PACK(int32 )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "RemoveAllMetadata", { ERASE_METHOD_PTR(URigHierarchy, RemoveAllMetadata, (FRigElementKey), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "RemoveMetadata", { ERASE_METHOD_PTR(URigHierarchy, RemoveMetadata, (FRigElementKey,  FName), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "Reset", { ERASE_METHOD_PTR(URigHierarchy, Reset, (), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "ResetCurveValues", { ERASE_METHOD_PTR(URigHierarchy, ResetCurveValues, (), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "ResetPoseToInitial", { ERASE_METHOD_PTR(URigHierarchy, ResetPoseToInitial, (ERigElementType), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "ResetToDefault", { ERASE_METHOD_PTR(URigHierarchy, ResetToDefault, (), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "RestoreConnectorsFromStates", { ERASE_METHOD_PTR(URigHierarchy, RestoreConnectorsFromStates, (TArray<FRigConnectorState>,  bool), ERASE_ARGUMENT_PACK(TArray<FRigElementKey> )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "RestoreSocketsFromStates", { ERASE_METHOD_PTR(URigHierarchy, RestoreSocketsFromStates, (TArray<FRigSocketState>,  bool), ERASE_ARGUMENT_PACK(TArray<FRigElementKey> )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SendAutoKeyEvent", { ERASE_METHOD_PTR(URigHierarchy, SendAutoKeyEvent, (FRigElementKey,  float,  bool), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetBoolArrayMetadata", { ERASE_METHOD_PTR(URigHierarchy, SetBoolArrayMetadata, (FRigElementKey,  FName,  TArray<bool>), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetBoolMetadata", { ERASE_METHOD_PTR(URigHierarchy, SetBoolMetadata, (FRigElementKey,  FName,  bool), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetConnectorSettings", { ERASE_METHOD_PTR(URigHierarchy, SetConnectorSettings, (FRigElementKey,  FRigConnectorSettings,  bool,  bool,  bool), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetConnectorSettingsByIndex", { ERASE_METHOD_PTR(URigHierarchy, SetConnectorSettingsByIndex, (int32,  FRigConnectorSettings,  bool,  bool,  bool), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetControlOffsetTransform", { ERASE_METHOD_PTR(URigHierarchy, SetControlOffsetTransform, (FRigElementKey,  FTransform,  bool,  bool,  bool,  bool), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetControlOffsetTransformByIndex", { ERASE_METHOD_PTR(URigHierarchy, SetControlOffsetTransformByIndex, (int32,  FTransform,  bool,  bool,  bool,  bool), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetControlPreferredEulerAngles", { ERASE_METHOD_PTR(URigHierarchy, SetControlPreferredEulerAngles, (FRigElementKey,  const FVector&,  EEulerRotationOrder,  bool,  bool), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetControlPreferredEulerAnglesByIndex", { ERASE_METHOD_PTR(URigHierarchy, SetControlPreferredEulerAnglesByIndex, (int32,  const FVector&,  EEulerRotationOrder,  bool,  bool), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetControlPreferredRotationOrder", { ERASE_METHOD_PTR(URigHierarchy, SetControlPreferredRotationOrder, (FRigElementKey,  EEulerRotationOrder), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetControlPreferredRotationOrderByIndex", { ERASE_METHOD_PTR(URigHierarchy, SetControlPreferredRotationOrderByIndex, (int32,  EEulerRotationOrder), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetControlPreferredRotator", { ERASE_METHOD_PTR(URigHierarchy, SetControlPreferredRotator, (FRigElementKey,  const FRotator&,  bool,  bool), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetControlPreferredRotatorByIndex", { ERASE_METHOD_PTR(URigHierarchy, SetControlPreferredRotatorByIndex, (int32,  const FRotator&,  bool,  bool), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetControlSettings", { ERASE_METHOD_PTR(URigHierarchy, SetControlSettings, (FRigElementKey,  FRigControlSettings,  bool,  bool,  bool), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetControlSettingsByIndex", { ERASE_METHOD_PTR(URigHierarchy, SetControlSettingsByIndex, (int32,  FRigControlSettings,  bool,  bool,  bool), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetControlShapeTransform", { ERASE_METHOD_PTR(URigHierarchy, SetControlShapeTransform, (FRigElementKey,  FTransform,  bool,  bool), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetControlShapeTransformByIndex", { ERASE_METHOD_PTR(URigHierarchy, SetControlShapeTransformByIndex, (int32,  FTransform,  bool,  bool), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetControlValue", { ERASE_METHOD_PTR(URigHierarchy, SetControlValue, (FRigElementKey,  FRigControlValue,  ERigControlValueType,  bool,  bool), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetControlValueByIndex", { ERASE_METHOD_PTR(URigHierarchy, SetControlValueByIndex, (int32,  FRigControlValue,  ERigControlValueType,  bool,  bool), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetControlVisibility", { ERASE_METHOD_PTR(URigHierarchy, SetControlVisibility, (FRigElementKey,  bool), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetControlVisibilityByIndex", { ERASE_METHOD_PTR(URigHierarchy, SetControlVisibilityByIndex, (int32,  bool), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetCurveValue", { ERASE_METHOD_PTR(URigHierarchy, SetCurveValue, (FRigElementKey,  float,  bool), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetCurveValueByIndex", { ERASE_METHOD_PTR(URigHierarchy, SetCurveValueByIndex, (int32,  float,  bool), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetFloatArrayMetadata", { ERASE_METHOD_PTR(URigHierarchy, SetFloatArrayMetadata, (FRigElementKey,  FName,  TArray<float>), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetFloatMetadata", { ERASE_METHOD_PTR(URigHierarchy, SetFloatMetadata, (FRigElementKey,  FName,  float), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetGlobalTransform", { ERASE_METHOD_PTR(URigHierarchy, SetGlobalTransform, (FRigElementKey,  FTransform,  bool,  bool,  bool,  bool), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetGlobalTransformByIndex", { ERASE_METHOD_PTR(URigHierarchy, SetGlobalTransformByIndex, (int32,  FTransform,  bool,  bool,  bool,  bool), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetInt32ArrayMetadata", { ERASE_METHOD_PTR(URigHierarchy, SetInt32ArrayMetadata, (FRigElementKey,  FName,  TArray<int32>), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetInt32Metadata", { ERASE_METHOD_PTR(URigHierarchy, SetInt32Metadata, (FRigElementKey,  FName,  int32), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetLinearColorArrayMetadata", { ERASE_METHOD_PTR(URigHierarchy, SetLinearColorArrayMetadata, (FRigElementKey,  FName,  TArray<FLinearColor>), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetLinearColorMetadata", { ERASE_METHOD_PTR(URigHierarchy, SetLinearColorMetadata, (FRigElementKey,  FName,  FLinearColor), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetLocalTransform", { ERASE_METHOD_PTR(URigHierarchy, SetLocalTransform, (FRigElementKey,  FTransform,  bool,  bool,  bool,  bool), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetLocalTransformByIndex", { ERASE_METHOD_PTR(URigHierarchy, SetLocalTransformByIndex, (int32,  FTransform,  bool,  bool,  bool,  bool), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetNameArrayMetadata", { ERASE_METHOD_PTR(URigHierarchy, SetNameArrayMetadata, (FRigElementKey,  FName,  TArray<FName>), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetNameMetadata", { ERASE_METHOD_PTR(URigHierarchy, SetNameMetadata, (FRigElementKey,  FName,  FName), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetParentWeight", { ERASE_METHOD_PTR(URigHierarchy, SetParentWeight, (FRigElementKey,  FRigElementKey,  FRigElementWeight,  bool,  bool), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetParentWeightArray", { ERASE_METHOD_PTR(URigHierarchy, SetParentWeightArray, (FRigElementKey,  TArray<FRigElementWeight>,  bool,  bool), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetPose_ForBlueprint", { ERASE_METHOD_PTR(URigHierarchy, SetPose_ForBlueprint, (FRigPose), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetQuatArrayMetadata", { ERASE_METHOD_PTR(URigHierarchy, SetQuatArrayMetadata, (FRigElementKey,  FName,  TArray<FQuat>), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetQuatMetadata", { ERASE_METHOD_PTR(URigHierarchy, SetQuatMetadata, (FRigElementKey,  FName,  FQuat), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetRigElementKeyArrayMetadata", { ERASE_METHOD_PTR(URigHierarchy, SetRigElementKeyArrayMetadata, (FRigElementKey,  FName,  TArray<FRigElementKey>), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetRigElementKeyMetadata", { ERASE_METHOD_PTR(URigHierarchy, SetRigElementKeyMetadata, (FRigElementKey,  FName,  FRigElementKey), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetRotatorArrayMetadata", { ERASE_METHOD_PTR(URigHierarchy, SetRotatorArrayMetadata, (FRigElementKey,  FName,  TArray<FRotator>), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetRotatorMetadata", { ERASE_METHOD_PTR(URigHierarchy, SetRotatorMetadata, (FRigElementKey,  FName,  FRotator), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetTag", { ERASE_METHOD_PTR(URigHierarchy, SetTag, (FRigElementKey,  FName), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetTransformArrayMetadata", { ERASE_METHOD_PTR(URigHierarchy, SetTransformArrayMetadata, (FRigElementKey,  FName,  TArray<FTransform>), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetTransformMetadata", { ERASE_METHOD_PTR(URigHierarchy, SetTransformMetadata, (FRigElementKey,  FName,  FTransform), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetVectorArrayMetadata", { ERASE_METHOD_PTR(URigHierarchy, SetVectorArrayMetadata, (FRigElementKey,  FName,  TArray<FVector>), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SetVectorMetadata", { ERASE_METHOD_PTR(URigHierarchy, SetVectorMetadata, (FRigElementKey,  FName,  FVector), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SortKeys", { ERASE_METHOD_PTR(URigHierarchy, SortKeys, (const TArray<FRigElementKey>&) const, ERASE_ARGUMENT_PACK(TArray<FRigElementKey> )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SwitchToDefaultParent", { ERASE_METHOD_PTR(URigHierarchy, SwitchToDefaultParent, (FRigElementKey,  bool,  bool), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SwitchToParent", { ERASE_METHOD_PTR(URigHierarchy, SwitchToParent, (FRigElementKey,  FRigElementKey,  bool,  bool), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "SwitchToWorldSpace", { ERASE_METHOD_PTR(URigHierarchy, SwitchToWorldSpace, (FRigElementKey,  bool,  bool), ERASE_ARGUMENT_PACK(bool )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "UnsetCurveValue", { ERASE_METHOD_PTR(URigHierarchy, UnsetCurveValue, (FRigElementKey,  bool), ERASE_ARGUMENT_PACK(void )) } );
			FAngelscriptBinds::AddFunctionEntry(URigHierarchy::StaticClass(), "UnsetCurveValueByIndex", { ERASE_METHOD_PTR(URigHierarchy, UnsetCurveValueByIndex, (int32,  bool), ERASE_ARGUMENT_PACK(void )) } );
}
