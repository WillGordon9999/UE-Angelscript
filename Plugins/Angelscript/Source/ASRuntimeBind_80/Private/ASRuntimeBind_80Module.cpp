#include "ASRuntimeBind_80Module.h"
#include "AngelscriptBinds.h"
IMPLEMENT_MODULE(FASRuntimeBind_80Module, ASRuntimeBind_80);

void FASRuntimeBind_80Module::StartupModule()
{

	FAngelscriptBinds::RegisterBinds
	(
		(int32)FAngelscriptBinds::EOrder::Late,
		[]()
		{
			Bind_ModularSynthComponent();
			Bind_SourceEffectBitCrusherPreset();
			Bind_SourceEffectChorusPreset();
			Bind_SourceEffectConvolutionReverbPreset();
			Bind_SourceEffectDynamicsProcessorPreset();
			Bind_SourceEffectEnvelopeFollowerPreset();
			Bind_SourceEffectFilterPreset();
			Bind_SourceEffectFoldbackDistortionPreset();
			Bind_SourceEffectMidSideSpreaderPreset();
			Bind_SourceEffectMotionFilterPreset();
			Bind_SourceEffectPannerPreset();
			Bind_SourceEffectPhaserPreset();
			Bind_SourceEffectRingModulationPreset();
			Bind_SourceEffectSimpleDelayPreset();
			Bind_SourceEffectStereoDelayPreset();
			Bind_SourceEffectWaveShaperPreset();
			Bind_SubmixEffectConvolutionReverbPreset();
			Bind_SubmixEffectDelayPreset();
			Bind_SubmixEffectFilterPreset();
			Bind_SubmixEffectFlexiverbPreset();
			Bind_SubmixEffectMultibandCompressorPreset();
			Bind_SubmixEffectStereoDelayPreset();
			Bind_SubmixEffectStereoToQuadPreset();
			Bind_SubmixEffectTapDelayPreset();
			Bind_GranularSynth();
			Bind_SynthComponentMonoWaveTable();
			Bind_SynthComponentToneGenerator();
			Bind_SynthSamplePlayer();
			Bind_Synth2DSlider();
			Bind_SynthKnob();
			Bind_AnimationSharingManager();
			Bind_InterchangeAnimationTrackSetNode();
			Bind_InterchangeAnimationTrackSetInstanceNode();
			Bind_InterchangeAnimationTrackNode();
			Bind_InterchangeTransformAnimationTrackNode();
			Bind_InterchangeSkeletalAnimationTrackNode();
			Bind_InterchangePhysicalCameraNode();
			Bind_InterchangeStandardCameraNode();
			Bind_InterchangeShaderNode();
			Bind_InterchangeDecalNode();
			Bind_InterchangeBaseLightNode();
			Bind_InterchangeLightNode();
			Bind_InterchangePointLightNode();
			Bind_InterchangeSpotLightNode();
			Bind_InterchangeRectLightNode();
			Bind_InterchangeVariantSetNode();
			Bind_InterchangeSceneVariantSetsNode();
			Bind_InterchangeMaterialInstanceNode();
			Bind_InterchangeMeshNode();
			Bind_InterchangeSceneNode();
			Bind_InterchangeFunctionCallShaderNode();
			Bind_InterchangeShaderGraphNode();
			Bind_InterchangeTexture2DNode();
			Bind_InterchangeActorFactoryNode();
			Bind_InterchangePhysicalCameraFactoryNode();
			Bind_InterchangeStandardCameraFactoryNode();
			Bind_InterchangeDecalActorFactoryNode();
			Bind_InterchangeDecalMaterialFactoryNode();
			Bind_InterchangeLevelSequenceFactoryNode();
			Bind_InterchangeBaseLightFactoryNode();
			Bind_InterchangeLightFactoryNode();
			Bind_InterchangeRectLightFactoryNode();
			Bind_InterchangePointLightFactoryNode();
			Bind_InterchangeSpotLightFactoryNode();
			Bind_InterchangePhysicsAssetFactoryNode();
			Bind_InterchangeSceneVariantSetsFactoryNode();
			Bind_InterchangeSkeletonFactoryNode();
			Bind_InterchangeTexture2DArrayFactoryNode();
			Bind_InterchangeTexture2DFactoryNode();
			Bind_InterchangeTextureLightProfileFactoryNode();
			Bind_InterchangeAnimSequenceFactoryNode();
			Bind_InterchangeCommonPipelineDataFactoryNode();
			Bind_InterchangeMaterialFactoryNode();
			Bind_InterchangeMaterialExpressionFactoryNode();
			Bind_InterchangeMaterialInstanceFactoryNode();
			Bind_InterchangeMaterialFunctionCallExpressionFactoryNode();
			Bind_InterchangeMaterialFunctionFactoryNode();
			Bind_InterchangeMeshActorFactoryNode();
			Bind_InterchangeSkeletalMeshFactoryNode();
			Bind_InterchangeSkeletalMeshLodDataNode();
			Bind_InterchangeStaticMeshFactoryNode();
			Bind_InterchangeStaticMeshLodDataNode();
			Bind_InterchangePipelineMeshesUtilities();
			Bind_TemplateSequenceActor();
			Bind_CameraAnimationCameraModifier();
			Bind_GameplayCameraComponent();
			Bind_GameplayCamerasSubsystem();
			Bind_PaperFlipbook();
			Bind_PaperFlipbookComponent();
			Bind_PaperGroupedSpriteComponent();
			Bind_PaperSpriteComponent();
			Bind_PaperTileMapComponent();
			Bind_PaperTerrainComponent();
		}
	);

}

void FASRuntimeBind_80Module::ShutdownModule()
{
}

